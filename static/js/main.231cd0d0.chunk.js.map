{"version":3,"sources":["components/GetNumber/GetNumber.module.css","components/Filter/Filter.module.css","components/ContactForm/Form.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/GetName/GetName.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","components/GetName/GetName.jsx","components/GetNumber/GetNumber.jsx","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","images/memphis-colorful.png","components/ContactList/ContactList.jsx","components/Container/Container.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","state","payload","filter","id","_","loading","combineReducers","middlewares","getDefaultMiddleware","logger","store","configureStore","reducer","contacts","contactsReducer","GetName","handleChange","value","className","styles","group","formItem","placeholder","type","pattern","title","required","name","onChange","bar","formLabel","htmlFor","GetNumber","axios","defaults","baseURL","getLoading","getFilter","getAllContacts","getVisibleContact","createSelector","normalizedFilter","toLocaleLowerCase","contact","includes","ContactForm","number","event","currentTarget","setState","handleSubmit","preventDefault","props","find","alert","onSubmit","reset","form","action","this","btn","disabled","React","Component","connect","dispatch","post","then","data","catch","error","addContact","deleteTodo","delete","deleteContact","list","map","cardWrapper","cardFront","card","style","backgroundImage","backImg","cube","face","cubeTop","cubeLeft","cubeRight","cardBack","details","btnRemove","onClick","Container","children","container","App","fetchContacts","textAlign","isLoading","color","height","width","a","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.231cd0d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"GetNumber_group__2xNYv\",\"formItem\":\"GetNumber_formItem__m8H_H\",\"formLabel\":\"GetNumber_formLabel__3PyH3\",\"bar\":\"GetNumber_bar__2gXJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"Filter_group__231to\",\"formItem\":\"Filter_formItem__3DISB\",\"formLabel\":\"Filter_formLabel__28wxa\",\"bar\":\"Filter_bar__2zMNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__38dX-\",\"btn\":\"Form_btn__3tppz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2fZK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__y248A\",\"cardWrapper\":\"ContactList_cardWrapper__3yZ_L\",\"card\":\"ContactList_card__1xDFD\",\"cardFront\":\"ContactList_cardFront__3ZoJk\",\"cardBack\":\"ContactList_cardBack__fWFb7\",\"cube\":\"ContactList_cube__1X0eF\",\"face\":\"ContactList_face__FylU4\",\"cubeTop\":\"ContactList_cubeTop__28E53\",\"cubeLeft\":\"ContactList_cubeLeft__3eA5L\",\"cubeRight\":\"ContactList_cubeRight__1dBFp\",\"details\":\"ContactList_details__3iko5\",\"btnRemove\":\"ContactList_btnRemove__3HRxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"GetName_group__2p515\",\"formItem\":\"GetName_formItem__3nge0\",\"formLabel\":\"GetName_formLabel__2sJqq\",\"bar\":\"GetName_bar__1x92U\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contact/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contact/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contact/AddContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contact/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contact/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/change');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n// import types from './contacts-types';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import contactsReducer from '../redux/contacts/contacts-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nconst middlewares = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n\r\n  middlewares,\r\n});\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './GetName.module.css'\r\nconst GetName = ({ handleChange, value }) => (\r\n       <div className={styles.group}>\r\n        <input className={styles.formItem} id='name' placeholder=\"Jacob Mercer\" type=\"text\" pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required name=\"name\" value={value} onChange={handleChange} />\r\n        <span className={styles.bar}></span>\r\n        <label className={styles.formLabel} htmlFor='name'>Name</label>\r\n        </div>\r\n)\r\nGetName.propTypes = {\r\n    handleChange:PropTypes.func.isRequired,\r\n    value:  PropTypes.string.isRequired      \r\n}\r\nexport default GetName","import PropTypes from 'prop-types';\r\nimport styles from './GetNumber.module.css'\r\nconst GetNumber = ({ handleChange, value }) => (\r\n    \r\n     <div className={styles.group}>\r\n       <input id='number' className={styles.formItem} value={value } placeholder=\"0970521180\" onChange={handleChange} type=\"tel\"required    pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n       title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                         name=\"number\" />\r\n        <span className={styles.bar}></span>\r\n        <label htmlFor='number' className={styles.formLabel} >Number</label>\r\n     </div>\r\n)\r\nGetNumber.propTypes = {\r\n        handleChange:PropTypes.func.isRequired,\r\n        value:  PropTypes.string.isRequired      \r\n}\r\nexport default GetNumber","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nexport const fetchContact = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (err) {\r\n    dispatch(fetchContactError(err));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContact = createSelector(\r\n  [getAllContacts, getFilter],\r\n\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    return items.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import React from 'react';\r\nimport GetName from '../GetName'\r\nimport GetNumber from '../GetNumber'\r\nimport styles from './Form.module.css'\r\nimport {addContact} from '../../redux/contacts/contacts-operations'\r\nimport { connect } from 'react-redux'\r\nimport {getAllContacts} from '../../redux/contacts/contacts-selectors'\r\n\r\nclass ContactForm extends React.Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        \r\n    }\r\n    handleChange = (event) => {\r\n        const {name,value} = event.currentTarget\r\n        this.setState({[name]:value})\r\n       \r\n      }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const validName = this.props.contacts.find(contact => (\r\n            contact.name.toLocaleLowerCase() === this.state.name.toLocaleLowerCase()\r\n          ))\r\n         validName ? alert(`${this.state.name} is already in contacts`) : this.props.onSubmit(this.state)\r\n        \r\n        this.reset()\r\n        \r\n    }\r\n\r\n    \r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n       \r\n        \r\n        return (\r\n            \r\n        <form className={styles.form}  action=\"\" onSubmit={this.handleSubmit}>\r\n            <GetName  handleChange={this.handleChange} value={this.state.name }/>\r\n                <GetNumber handleChange={this.handleChange} value={this.state.number} />\r\n                \r\n                <button className={styles.btn} type=\"submit\" disabled={!this.state.name || !this.state.number}>Add contact</button>\r\n                \r\n        </form>\r\n         \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: getAllContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onSubmit: ({ name, number }) => dispatch(addContact(name, number))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","export default __webpack_public_path__ + \"static/media/memphis-colorful.70d889ff.png\";","import styles from './ContactList.module.css';\r\nimport backImg from \"../../images/memphis-colorful.png\";\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport {getVisibleContact} from '../../redux/contacts/contacts-selectors'\r\nconst ContactList = ({ contacts, deleteTodo }) => (\r\n    <ul className={styles.list}>\r\n        {\r\n            contacts.map(({ id, name, number }) => (\r\n                <li key={id} id={styles.cardWrapper} >\r\n                    <div id={styles.cardFront} className={styles.card} style={{ backgroundImage: backImg }}>\r\n                        <div id={styles.cube}>\r\n                            <div className={styles.face || styles.cubeTop} > <p>{name}</p></div>\r\n                            <div className={styles.face || styles.cubeLeft}><p>{name}</p></div>\r\n                            <div className={styles.face || styles.cubeRight}><p>{name}</p></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id={styles.cardBack} className={styles.card}>\r\n                        <div className={styles.details}>\r\n                            <h3>{number}</h3>\r\n                        </div>\r\n                        <button className={styles.btnRemove} type=\"button\" onClick={() => deleteTodo(id)}>\r\n                        \r\n                        </button>\r\n                    </div>\r\n                </li>\r\n\r\n            ))}\r\n    </ul>\r\n);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: getVisibleContact(state)\r\n});\r\n    \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteTodo: (id) => dispatch(deleteContact(id))\r\n});\r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n","import styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n     \r\n    <div className={styles.container}>\r\n         {children}\r\n    </div>\r\n\r\n);\r\n\r\n\r\nexport default Container;","import { connect } from 'react-redux'\r\nimport {changeFilter} from '../../redux/contacts/contacts-action'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css'\r\nimport {getFilter} from '../../redux/contacts/contacts-selectors'\r\n    \r\nconst Filter = ({ value, onChange }) => (\r\n    <div className={styles.group}>\r\n        <input id='filter' className={styles.formItem} type=\"text\" required value={value} onChange={onChange} />\r\n        <span className={styles.bar}></span>\r\n        <label htmlFor='filter' className={styles.formLabel}>Filter</label>\r\n    </div>\r\n)\r\nFilter.propTypes = {\r\n    onChange:PropTypes.func.isRequired,\r\n    value:  PropTypes.string.isRequired      \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: getFilter(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onChange:(event)=>dispatch(changeFilter(event.currentTarget.value))\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter) ","import React from 'react';\r\nimport ContactForm from './ContactForm'\r\nimport ContactList from './ContactList'\r\nimport Container from './Container'\r\nimport Filter from './Filter'\r\nimport { connect } from 'react-redux'\r\nimport { fetchContact } from '../redux/contacts/contacts-operations'\r\nimport Loader from \"react-loader-spinner\";\r\nimport {getLoading} from '../redux/contacts/contacts-selectors'\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts()\r\n  }\r\n  \r\n  render() {\r\n   \r\n    return (\r\n      \r\n      <Container>\r\n        <h1 style={{ textAlign: 'center' }}>Phonebook</h1>\r\n        <ContactForm  />\r\n        <h2 style={{ textAlign: 'center' }}>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n        {this.props.isLoading && <Loader\r\n                type=\"Rings\"\r\n                color=\"blue\"\r\n                height={100}\r\n                width={100}\r\n            />}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: getLoading(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts:()=>dispatch(fetchContact())\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store';\r\nimport './styles.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}