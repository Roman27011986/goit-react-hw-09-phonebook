{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/Form.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","components/GetName/GetName.jsx","components/GetNumber/GetNumber.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/memphis-colorful.png","components/ContactList/ContactList.jsx","components/Container/Container.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js","components/GetName/GetName.module.css","components/GetNumber/GetNumber.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","ocntactsPersistConfig","key","storage","blacklist","middlewares","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReducer","persistor","persistStore","GetName","handleChange","value","className","styles","group","formItem","placeholder","type","pattern","title","required","onChange","bar","formLabel","htmlFor","GetNumber","ContactForm","event","currentTarget","setState","handleSubmit","preventDefault","props","find","contact","toLocaleLowerCase","alert","onSubmit","reset","form","action","this","btn","disabled","React","Component","connect","dispatch","contactActions","getVisibleContact","allContacts","normalizedFilter","includes","deleteTodo","contactActiion","list","map","cardWrapper","cardFront","card","style","backgroundImage","backImg","cube","face","cubeTop","cubeLeft","cubeRight","cardBack","details","btnRemove","onClick","Container","children","container","App","textAlign","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.940bca30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"Filter_group__2gmIY\",\"formItem\":\"Filter_formItem__2GNiQ\",\"formLabel\":\"Filter_formLabel__1tP8_\",\"bar\":\"Filter_bar__2a_lC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3ACUZ\",\"btn\":\"Form_btn__2kQqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1aItI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__8U2pU\",\"cardWrapper\":\"ContactList_cardWrapper__1jsXe\",\"card\":\"ContactList_card__1k-Ta\",\"cardFront\":\"ContactList_cardFront__DUEhK\",\"cardBack\":\"ContactList_cardBack__37Gyz\",\"cube\":\"ContactList_cube__QUSgR\",\"face\":\"ContactList_face__2t5pG\",\"cubeTop\":\"ContactList_cubeTop__FGcrX\",\"cubeLeft\":\"ContactList_cubeLeft__1Xjkm\",\"cubeRight\":\"ContactList_cubeRight__1ql-5\",\"details\":\"ContactList_details__3TXmF\",\"btnRemove\":\"ContactList_btnRemove__3xl9q\"};","import { v4 as uuidv4 } from 'uuid';\r\n// import types from './contacts-types';\r\n\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/change');\r\n\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = todoId => ({\r\n//   type: types.DELETE,\r\n//   payload: todoId,\r\n// });\r\n\r\n// const changeFilter = value => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n// import types from './contacts-types';\r\nimport actions from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\n// Ванила Redux\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n//----------------------------------------------------------------------------\r\n\r\n//Toolkit\r\n\r\nconst ocntactsPersistConfig = {\r\n  key: 'contact',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middlewares = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const rootReducer = {\r\n//   contacts: persistReducer(persistConfig, contactsReducer),\r\n// };\r\n\r\n// const persistedReducer = persistReducer(\r\n//   persistConfig,\r\n//   combineReducers(rootReducer),\r\n// );\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(ocntactsPersistConfig, contactsReducer),\r\n  },\r\n  // Добавил логгер в настройки хранилища\r\n\r\n  middlewares,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import PropTypes from 'prop-types';\r\nimport styles from './GetName.module.css'\r\nconst GetName = ({ handleChange, value }) => (\r\n       <div className={styles.group}>\r\n        <input className={styles.formItem} id='name' placeholder=\"Jacob Mercer\" type=\"text\" pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required name=\"name\" value={value} onChange={handleChange} />\r\n        <span className={styles.bar}></span>\r\n        <label className={styles.formLabel} htmlFor='name'>Name</label>\r\n        </div>\r\n)\r\nGetName.propTypes = {\r\n    handleChange:PropTypes.func.isRequired,\r\n    value:  PropTypes.string.isRequired      \r\n}\r\nexport default GetName","import PropTypes from 'prop-types';\r\nimport styles from './GetNumber.module.css'\r\nconst GetNumber = ({ handleChange, value }) => (\r\n    \r\n     <div className={styles.group}>\r\n       <input id='number' className={styles.formItem} value={value } placeholder=\"0970521180\" onChange={handleChange} type=\"tel\"required    pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n       title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                         name=\"number\" />\r\n        <span className={styles.bar}></span>\r\n        <label htmlFor='number' className={styles.formLabel} >Number</label>\r\n     </div>\r\n)\r\nGetNumber.propTypes = {\r\n        handleChange:PropTypes.func.isRequired,\r\n        value:  PropTypes.string.isRequired      \r\n}\r\nexport default GetNumber","import React from 'react';\r\nimport GetName from '../GetName'\r\nimport GetNumber from '../GetNumber'\r\nimport styles from './Form.module.css'\r\nimport contactActions from '../../redux/contacts/contacts-action'\r\nimport {connect} from 'react-redux'\r\n\r\nclass ContactForm extends React.Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        \r\n    }\r\n    handleChange = (event) => {\r\n        const {name,value} = event.currentTarget\r\n        this.setState({[name]:value})\r\n       \r\n      }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const validName = this.props.contacts.find(contact => (\r\n            contact.name.toLocaleLowerCase() === this.state.name.toLocaleLowerCase()\r\n          ))\r\n         validName ? alert(`${this.state.name} is already in contacts`) : this.props.onSubmit(this.state)\r\n        \r\n        this.reset()\r\n        \r\n    }\r\n\r\n    \r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n       \r\n        \r\n        return (\r\n            \r\n        <form className={styles.form}  action=\"\" onSubmit={this.handleSubmit}>\r\n            <GetName  handleChange={this.handleChange} value={this.state.name }/>\r\n                <GetNumber handleChange={this.handleChange} value={this.state.number} />\r\n                \r\n                <button className={styles.btn} type=\"submit\" disabled={!this.state.name || !this.state.number}>Add contact</button>\r\n                \r\n        </form>\r\n         \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => ({\r\n    contacts: items\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onSubmit:({name,number})=>dispatch(contactActions.addContact(name,number))\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactForm) ","export default __webpack_public_path__ + \"static/media/memphis-colorful.70d889ff.png\";","import styles from './ContactList.module.css'\r\nimport backImg from \"./memphis-colorful.png\"\r\nimport { connect } from 'react-redux'\r\nimport contactActiion from '../../redux/contacts/contacts-action'\r\nconst ContactList = ({ contacts,deleteTodo }) => (\r\n    <ul className={styles.list}>\r\n    {\r\n        contacts.map(({ id, name, number }) => (\r\n            <li key={id} id={styles.cardWrapper} >\r\n            <div id={styles.cardFront} className={styles.card} style={{ backgroundImage:  backImg  }}>\r\n                <div id={styles.cube}>\r\n                        <div className={styles.face || styles.cubeTop} > <p>{name }</p></div>\r\n                        <div className={styles.face || styles.cubeLeft}><p>{name }</p></div>\r\n                    <div className={styles.face || styles.cubeRight}><p>{name }</p></div>\r\n                    </div>\r\n                </div>\r\n            <div id={styles.cardBack} className={styles.card}>\r\n                <div className={styles.details}>\r\n                        <h3>{ number}</h3>\r\n                    \r\n                    \r\n                    </div>\r\n                    <button className={styles.btnRemove} type=\"button\"onClick={() => deleteTodo(id)}>\r\n                        \r\n                    </button>\r\n                </div>\r\n            \r\n        \r\n        </li>\r\n\r\n ))}\r\n</ul>\r\n)\r\n\r\nconst getVisibleContact = (allContacts,filter) => {  \r\n   \r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n    \r\n   return allContacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(normalizedFilter)\r\n      )\r\n}\r\n  \r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n    \r\n    contacts: getVisibleContact(items,filter)\r\n});\r\n    \r\n// const mapStateToProps = state => ({\r\n//     contacts:state.contacts.items\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteTodo:(id)=>dispatch(contactActiion.deleteContact(id))\r\n})\r\n    \r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList) \r\n\r\n","\r\nimport styles from './Container.module.css'\r\nconst Container = ({ children }) => (\r\n     \r\n    <div className={styles.container}>\r\n         \r\n        {children}\r\n    </div>\r\n)\r\n\r\n\r\nexport default Container","import { connect } from 'react-redux'\r\nimport contactActiion from '../../redux/contacts/contacts-action'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css'\r\nconst Filter = ({ value, onChange }) => (\r\n    <div className={styles.group}>\r\n        <input id='filter' className={styles.formItem} type=\"text\" required value={value} onChange={onChange} />\r\n        <span className={styles.bar}></span>\r\n        <label htmlFor='filter' className={styles.formLabel}>Filter</label>\r\n    </div>\r\n)\r\nFilter.propTypes = {\r\n    onChange:PropTypes.func.isRequired,\r\n    value:  PropTypes.string.isRequired      \r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: state.contacts.filter\r\n});\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onChange:(event)=>dispatch(contactActiion.changeFilter(event.currentTarget.value))\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter) ","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './ContactForm'\r\nimport ContactList from './ContactList'\r\nimport Container from './Container'\r\nimport Filter from './Filter'\r\n\r\nclass App extends React.Component {\r\n  // state = {\r\n  //   contacts: [],\r\n  //   filter: '',\r\n  // };\r\n\r\n  // componentDidMount() {\r\n  //   const contacts = localStorage.getItem('contacts');\r\n  //   const parseContacts = JSON.parse(contacts);\r\n  //   if (parseContacts) {\r\n  //     this.setState({contacts:parseContacts})\r\n  //   }\r\n   \r\n  // }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (this.state.contacts !== prevState.contacts) {\r\n  //     localStorage.setItem('contacts',JSON.stringify(this.state.contacts))\r\n  //   }\r\n \r\n  // }\r\n\r\n  // formSubmitHandler = ({name,number}) => {\r\n  //   const validName = this.state.contacts.find(contact => (\r\n  //     contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\r\n  //   ))\r\n  //  validName ? alert(`${name} is already in contacts`) : this.addTodo(name,number)\r\n  // }\r\n  \r\n  // addTodo = (name, number) => {\r\n    \r\n  //   const todo = {\r\n  //     id: uuidv4(),\r\n  //     name: name,\r\n  //     number:number\r\n  //   }\r\n  //   this.setState(({ contacts }) => (\r\n  //     {contacts:[todo,...contacts]}\r\n  //     ))\r\n  // }\r\n    \r\n  // deleteTodo = todoId => {\r\n  // this.setState(prevState => ({\r\n  //     contacts: prevState.contacts.filter(todo => todo.id !== todoId),\r\n  //   }));\r\n  // }\r\n  \r\n  // changeFilter = (event) => {\r\n  \r\n  //   this.setState({filter:event.currentTarget.value})\r\n  // }\r\n  \r\n  // getVisibleTodo = () => {\r\n  //   const { filter, contacts } = this.state\r\n  //   const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n  //  return contacts.filter(todo =>\r\n  //     todo.name.toLocaleLowerCase().includes(normalizedFilter)\r\n  //     )\r\n  // }\r\n  render() {\r\n   \r\n    \r\n    \r\n    // const visibleTodos = this.getVisibleTodo()\r\n    return (\r\n      \r\n      <Container>\r\n        <h1 style={{ textAlign: 'center' }}>Phonebook</h1>\r\n        <ContactForm  />\r\n        <h2 style={{ textAlign: 'center' }}>Contacts</h2>\r\n        {/* <Filter value={this.state.filter} onChange={this.changeFilter }/> */}\r\n        <Filter />\r\n        {/* <ContactList  contacts={visibleTodos} deleteTodo={this.deleteTodo }/> */}\r\n        <ContactList   />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport './styles.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"GetName_group__2Ng-l\",\"formItem\":\"GetName_formItem__2vh84\",\"formLabel\":\"GetName_formLabel__1nLmq\",\"bar\":\"GetName_bar__24OCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"GetNumber_group__SBnmp\",\"formItem\":\"GetNumber_formItem__2TN7R\",\"formLabel\":\"GetNumber_formLabel__22TYK\",\"bar\":\"GetNumber_bar__7tUx_\"};"],"sourceRoot":""}